[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "chatbot-rag"
version = "1.0.0"
description = "A low-cost RAG chatbot solution for small businesses"
authors = [
    {name = "Chatbot RAG Team", email = "team@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12"
keywords = ["chatbot", "rag", "aws", "bedrock", "serverless"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    # Core AWS SDK
    "boto3>=1.34.0",
    "botocore>=1.34.0",
    
    # Vector calculations (lightweight)
    "numpy>=1.26.0",
    
    # Caching
    "cachetools>=5.3.0",
    
    # Document processing (essential only)
    "PyPDF2>=3.0.1",
    "python-docx>=1.1.0",
    "Pillow>=10.1.0",
    
    # Text processing (minimal)
    "textstat>=0.7.3",
    
    # JSON handling (faster than standard json)
    "orjson>=3.9.0",
    
    # Security
    "cryptography>=41.0.0",
    
    # Configuration
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    # Web framework and async support (for local development)
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "websockets>=12.0",
    "aiofiles>=23.2.0",
    
    # Data processing and ML (for development/analysis)
    "pandas>=2.1.0",
    "scikit-learn>=1.3.0",
    
    # Advanced text processing (for development)
    "nltk>=3.8.1",
    "python-multipart>=0.0.6",
    
    # Configuration and utilities
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "typing-extensions>=4.8.0",
    
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
    "moto[all]>=4.2.0",
    
    # Development tools
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    
    # Logging and monitoring
    "structlog>=23.2.0",
    "python-json-logger>=2.0.7",
    
    # Additional security tools
    "python-jose[cryptography]>=3.3.0",
    
    # Additional document processing
    "openpyxl>=3.1.2",
    
    # HTTP clients for deployment scripts
    "httpx>=0.25.0",
    "aiohttp>=3.9.0",
    "requests>=2.31.0",
    
    # Environment and configuration
    "python-decouple>=3.8",
]
cdk = [
    "aws-cdk-lib>=2.90.0",
    "constructs>=10.3.0",
]

[project.scripts]
deploy = "scripts.deploy:main"
upload-docs = "scripts.upload_documents:main"
cleanup-db = "scripts.cleanup_database:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
